#!/bin/bash
# mkxpud - binary level image build system 
# for xPUD project <http://xpud.org>
# Copyright (c) 2009 by Ping-Hsun Chen <penkia@gmail.com>

export LC_ALL=C
[ -f tools/function.sh ] && . tools/function.sh 

if [ -z $1 ]; then
	usage
else

	if [ ! -z $2 ] && [ -f "config/$2.cookbook" ]; then export MKXPUD_CODENAME=$2
	else export MKXPUD_CODENAME='default'; fi
	export MKXPUD_CONFIG=config/$MKXPUD_CODENAME.cookbook
	eval export `./tools/parser $MKXPUD_CONFIG config`
	
	case $1 in
		all)
			clean
			setup $MKXPUD_CODENAME	
			echo "[mkxpud] Project Name: $MKXPUD_NAME"
			
			## FIXME: merge init, strip and opt function
			install && init && strip 
			opt
			kernel $MKXPUD_CODENAME
			post
			image $MKXPUD_CODENAME
			echo "[mkxpud] $MKXPUD_CODENAME Done"
			;;
		clean)
			clean
			;;
		image)
			image $MKXPUD_CODENAME
			;;
		test)
			sudo qemu -kernel $MKXPUD_KERNEL_IMAGE -initrd deploy/$MKXPUD_CODENAME.cpio -hda /dev/zero -m 512 -net nic,model=ne2k_pci -net user
			;;
		help|usage)
			usage
			;;
		mkopt)
			# create opt using recipe: mkxpud mkopt {recipe name} {cookbook name}
			# Attention! cookbook must be built first, before making opts, so all dependencies could be checked correctly
			# create opt from directory: mkxpud mkopt {directory}
			makeopt $2 $3
			;;
		*)
			echo "[mkxpud] $1: not yet implemented"
			;;
	esac 
fi

